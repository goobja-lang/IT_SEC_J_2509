클라이언트가 서버에 데이터 주는 방법

1. query string(METHOD GET)
2. body(METHOD POST)

http://localhost:8000/?mydata=12345  // 데이터 보내는 방법 중 query 사용법
 - "?mydata=12345"


예제
@app.get("/")
def default_get(mydata: Optional[str]=None):
    result={"success":True, "data":None, "msg":""}
    try:
        result["data"]=f"mydata:{mydata}"
        return result
    except Exception as e:
        result["success"]=False
        result["msg"]=f"server error. {e!r}"
        return result

-----------------------------------------------------------------
@app.get("/")
def default_get(mydata: Optional[str]=None, 
                mydata2: Optional[str]=None):
    result={"success":True, "data":None, "msg":""}
    try:
        result["data"]=f"mydata:{mydata}, mydata2:{mydata2}"

http://localhost:8000/?mydata=12345&mydata2=안녕하세요

------------------------------------------

app = FastAPI()

@app.get("/")
def default_get(mydata: Optional[str]=None, 
                mydata2: Optional[str]=None):
    result={"success":True, "data":None, "msg":""}
    try:
        result["data"]=f"mydata:{mydata}, mydata2:{mydata2}"
        return result
    except Exception as e:
        result["success"]=False
        result["msg"]=f"server error. {e!r}"
        return result

class Item(BaseModel):
    name:str
    price:int
@app.post("/item")
def post_item(item:Item):
    result={"success":True, "data":None, "msg":""}
    try:
        result["data"]=item
        return result
    except Exception as e:
        result["success"]=False
        result["msg"]=f"server error. {e!r}"
        return result
   

if __name__ == "__main__":
    uvicorn.run("app:app", host="localhost", port=8000, reload=True)



postman 다운로드 - 툴 설치
- 새폴더 만들고 - 하부파일 만들고 - POST / raw / JSON 설정
- http://localhost:8000/item 입력